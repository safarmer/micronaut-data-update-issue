plugins {
    id("com.github.johnrengelman.shadow") version "7.1.0"
    id("io.micronaut.application") version "3.0.2"
    id("com.adarshr.test-logger") version "3.0.0"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-jdbc")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("org.testcontainers:mysql")
    implementation("org.testcontainers:jdbc")
    implementation("org.testcontainers:testcontainers")
    runtimeOnly("com.fasterxml.jackson.core:jackson-core")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("mysql:mysql-connector-java")
    testImplementation("org.assertj:assertj-core:3.22.0")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:mysql")
    testImplementation("org.testcontainers:testcontainers")
    implementation("io.micronaut:micronaut-validation")

}


application {
    mainClass.set("com.example.Application")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}


// Configure the JUnit test tasks for all projects.
test {
  useJUnitPlatform()

  reports {
    junitXml.required = true
  }

  testlogger {
    theme "standard-parallel"
    showCauses true
    showFullStackTraces true
    showSimpleNames false
    showStandardStreams false
    showPassedStandardStreams false
    showSkippedStandardStreams false
    showFailedStandardStreams true
  }
}